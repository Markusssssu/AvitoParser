import db
import utils
import os
from bot_instance import bot


@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    msg = bot.send_message(
        message.chat.id,
        (
            '<b>–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ/–¥–µ–Ω—å/–≤–µ—á–µ—Ä! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∏–º–µ–Ω–∏ –î–∂–∞–Ω–≥–æ.</b>\n\n'
            '–Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —Å–ª—É–∂–∏—Ç—å –≤–∞–º –≤–µ—Ä–æ–π –∏ –ø—Ä–∞–≤–¥–æ–π '
            '–ø–æ –≤–∞—à–∏–º –ø–æ–∏—Å–∫–æ–≤—ã–º –∑–∞–ø—Ä–æ—Å–∞–º.\n\n'
            '<b>–ß—Ç–æ —É–º–µ—é (–ø—É—Ö –Ω–µ —Å–æ–±–∏—Ä–∞—é):</b>\n'
            '‚Ä¢ /add - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É\n'
            '‚Ä¢ /list - –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π\n'
            '‚Ä¢ /delete - –£–¥–∞–ª–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ\n\n'
        ),
        parse_mode='HTML'
    )


@bot.message_handler(commands=['add'])
def add_search(message):
    bot.send_message(message.chat.id,
                     'üîç <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è</b>\n\n'
                     '–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–∏—Å–∫–æ–≤—É—é –≤—ã–¥–∞—á—É Avito —Å –Ω—É–∂–Ω—ã–º–∏ –≤–∞–º —Ñ–∏–ª—å—Ç—Ä–∞–º–∏.\n\n'
                     ' <b>–í–∞–∂–Ω–æ:</b> –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è Avito.\n'
                     '<b>–ü—Ä–∏–º–µ—Ä:</b>\n'
                     '–ï—Å–ª–∏ –¥–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è - –¥–æ–±–∞–≤—å—Ç–µ <code>m.</code> –≤ –Ω–∞—á–∞–ª–æ —Å—Å—ã–ª–∫–∏.',
                     parse_mode='HTML', disable_web_page_preview=True)
    msg = bot.send_message(message.chat.id, '‚è≥ –û–∂–∏–¥–∞—é —Å—Å—ã–ª–∫—É...')

    bot.register_next_step_handler(msg, waiting_url_step)


def waiting_url_step(message):
    search_url = message.text
    search_url = search_url.split(' ')[0]

    normalized_url = utils.normalize_avito_url(search_url)
    if normalized_url != search_url:
        bot.send_message(message.chat.id, f'–°—Å—ã–ª–∫–∞ –±—ã–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞:\n<code>{normalized_url}</code>', parse_mode='HTML')
    search_url = normalized_url

    if not utils.check_avito_url(search_url):
        msg = bot.send_message(message.chat.id, '<b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞.</b>\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', parse_mode='HTML')
        return

    try:
        if db.is_link_already_tracking_by_user(message.chat.id, search_url):
            bot.send_message(message.chat.id, '<b>–í—ã —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç–µ –¥–∞–Ω–Ω—É—é —Å—Å—ã–ª–∫—É.</b>', parse_mode='HTML')
            return
    except:
        msg = bot.send_message(message.chat.id, '<b>–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.</b>\n\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.', parse_mode='HTML')
        return

    try:
        search_url = search_url.split(' ')[0]
        db.save_url_to_temp(message.chat.id, search_url)
    except:
        msg = bot.send_message(message.chat.id, '<b>–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.</b>\n\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.', parse_mode='HTML')
        return

    msg = bot.send_message(message.chat.id, 'üìù <b>–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞.</b>\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: "–ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –≤ –ú–æ—Å–∫–≤–µ" –∏–ª–∏ "–ò–≥—Ä—ã PS4"', parse_mode='HTML')
    bot.register_next_step_handler(msg, select_search_name_step)


def select_search_name_step(message):
    search_name = message.text
    try:
        search_url = db.get_temp_url(message.chat.id)
    except:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.')
        return

    if db.save_url(message.chat.id, search_url, search_name):
        bot.send_message(message.chat.id, 
                        f'<b>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ</b>\n\n'
                        f'<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {search_name}\n'
                        f'<b>–°—Å—ã–ª–∫–∞:</b> {search_url}\n\n'
                        f'–¢–µ–ø–µ—Ä—å –º–æ–π —Ö–æ–∑—è–∏–Ω —è –±—É–¥—É —Å–æ–±–∏—Ä–∞—Ç—å –ø—É—Ö... –æ–π —Ç–æ –µ—Å—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å –∞–≤–∏—Ç–æ –¥–ª—è –≤–∞—Å.',
                        parse_mode='HTML', disable_web_page_preview=True)
    else:
        bot.send_message(message.chat.id, '<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏.</b>\n\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.', parse_mode='HTML')


def send_tracking_urls_list(uid):
    user_tracking_urls_list = db.get_users_tracking_urls_list(uid)

    if not user_tracking_urls_list:
        bot.send_message(uid, 'üì≠ <b>–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π.</b>\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /add –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.', parse_mode='HTML')
        return

    msg = 'üìã <b>–í–∞—à–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:</b>\n\n'
    i = 1
    for url in user_tracking_urls_list:
        msg += f'{i}. <b>{url["name"]}</b>\n'
        msg += f'üîó <code>{url["url"]}</code>\n\n'
        i += 1

    bot.send_message(uid, msg, parse_mode='HTML', disable_web_page_preview=True)


@bot.message_handler(commands=['delete'])
def deleting_search(message):
    if not db.get_users_tracking_urls_list(message.chat.id):
        bot.send_message(message.chat.id, '<b>–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π.</b>', parse_mode='HTML')
        return
    send_tracking_urls_list(uid=message.chat.id)
    msg = bot.send_message(message.chat.id, '<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —É–¥–∞–ª—è–µ–º–æ–π —Å—Å—ã–ª–∫–∏.</b>', parse_mode='HTML')
    bot.register_next_step_handler(msg, waiting_num_to_delete)


def waiting_num_to_delete(message):
    try:
        delete_url_index_in_list = int(message.text)
    except:
        bot.send_message(message.chat.id, '<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ.</b>', parse_mode='HTML')
        return

    if delete_url_index_in_list <= 0:
        bot.send_message(message.chat.id, '<b>–ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.</b>', parse_mode='HTML')
        return

    if db.delete_url_from_tracking(message.chat.id, delete_url_index_in_list):
        bot.send_message(message.chat.id, '<b>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ</b>', parse_mode='HTML')
    else:
        bot.send_message(message.chat.id, '<b>–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.</b>\n\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.', parse_mode='HTML')


@bot.message_handler(commands=['list'])
def send_list(message):
    send_tracking_urls_list(message.chat.id)


if __name__ == '__main__':
    bot.polling(none_stop=True)
